{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MockerPolicy"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"MockerPolicy can be used to customize mocking behavior and disable the requirement of"},{"type":"text","text":" "},{"type":"text","text":"return value registration in case of certain types."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/mockerpolicy"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Mockable\/SQ","doc:\/\/Mockable\/s25ExpressibleByArrayLiteralP","doc:\/\/Mockable\/s9OptionSetP","doc:\/\/Mockable\/SY","doc:\/\/Mockable\/s8SendableP","doc:\/\/Mockable\/s10SetAlgebraP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A policy that controls how the library handles when no return value is found during mocking."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MockerPolicy"}],"title":"MockerPolicy","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:8Mockable12MockerPolicyV","modules":[{"name":"Mockable"}],"navigatorTitle":[{"kind":"identifier","text":"MockerPolicy"}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/rawValue"]},{"title":"Type Properties","identifiers":["doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/default","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxed","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedMocked","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedNonThrowingVoid","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedOptional","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedThrowingVoid","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedVoid","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/strict"]},{"title":"Default Implementations","identifiers":["doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/Equatable-Implementations","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/OptionSet-Implementations","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/SetAlgebra-Implementations"],"generated":true}],"references":{"doc://Mockable/documentation/Mockable/MockerPolicy/relaxedNonThrowingVoid":{"role":"symbol","title":"relaxedNonThrowingVoid","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"relaxedNonThrowingVoid"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"}],"abstract":[{"type":"text","text":"Non-throwing Void functions will run without return value registration."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedNonThrowingVoid","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/relaxednonthrowingvoid"},"doc://Mockable/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/Mockable\/s25ExpressibleByArrayLiteralP"},"doc://Mockable/documentation/Mockable/MockerPolicy/strict":{"role":"symbol","title":"strict","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strict"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"}],"abstract":[{"type":"text","text":"All return values must be registered, a fatal error will occur otherwise."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/strict","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/strict"},"doc://Mockable/documentation/Mockable/MockerPolicy/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/equatable-implementations"},"doc://Mockable/documentation/Mockable/MockerPolicy/relaxedVoid":{"role":"symbol","title":"relaxedVoid","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"relaxedVoid"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"}],"abstract":[{"type":"text","text":"Every void function will run normally without a registration"}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedVoid","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/relaxedvoid"},"doc://Mockable/documentation/Mockable/MockerPolicy/relaxed":{"role":"symbol","title":"relaxed","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"relaxed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"}],"abstract":[{"type":"text","text":"Every literal expressible requirement will return a default value."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxed","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/relaxed"},"doc://Mockable/s10SetAlgebraP":{"type":"unresolvable","title":"Swift.SetAlgebra","identifier":"doc:\/\/Mockable\/s10SetAlgebraP"},"doc://Mockable/documentation/Mockable/MockerPolicy":{"role":"symbol","title":"MockerPolicy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MockerPolicy"}],"abstract":[{"type":"text","text":"A policy that controls how the library handles when no return value is found during mocking."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MockerPolicy"}],"url":"\/documentation\/mockable\/mockerpolicy"},"doc://Mockable/documentation/Mockable/MockerPolicy/relaxedMocked":{"role":"symbol","title":"relaxedMocked","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"relaxedMocked"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"}],"abstract":[{"type":"text","text":"Types conforming to the "},{"type":"codeVoice","code":"Mocked"},{"type":"text","text":" protocol will default to their mock value."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedMocked","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/relaxedmocked"},"doc://Mockable/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Mockable\/s8SendableP"},"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/MockerPolicy/relaxedThrowingVoid":{"role":"symbol","title":"relaxedThrowingVoid","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"relaxedThrowingVoid"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"}],"abstract":[{"type":"text","text":"Throwing Void functions will run without return value registration."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedThrowingVoid","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/relaxedthrowingvoid"},"doc://Mockable/documentation/Mockable/MockerPolicy/SetAlgebra-Implementations":{"role":"collectionGroup","title":"SetAlgebra Implementations","abstract":[],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/SetAlgebra-Implementations","kind":"article","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/setalgebra-implementations"},"doc://Mockable/documentation/Mockable/MockerPolicy/OptionSet-Implementations":{"role":"collectionGroup","title":"OptionSet Implementations","abstract":[],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/OptionSet-Implementations","kind":"article","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/optionset-implementations"},"doc://Mockable/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/Mockable\/SY"},"doc://Mockable/documentation/Mockable/MockerPolicy/relaxedOptional":{"role":"symbol","title":"relaxedOptional","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"relaxedOptional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"}],"abstract":[{"type":"text","text":"Optional return values will default to nil."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/relaxedOptional","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/relaxedoptional"},"doc://Mockable/s9OptionSetP":{"type":"unresolvable","title":"Swift.OptionSet","identifier":"doc:\/\/Mockable\/s9OptionSetP"},"doc://Mockable/documentation/Mockable/MockerPolicy/init(rawValue:)":{"role":"symbol","title":"init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new option set from the given raw value."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/init(rawValue:)","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/init(rawvalue:)"},"doc://Mockable/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Mockable\/SQ"},"doc://Mockable/documentation/Mockable/MockerPolicy/default":{"role":"symbol","title":"default","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"}],"abstract":[],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/default","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/default"},"doc://Mockable/documentation/Mockable/MockerPolicy/rawValue":{"role":"symbol","title":"rawValue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Option set raw value."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/rawValue","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/rawvalue"}}}