{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"generic"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Parameter","preciseIdentifier":"s:8Mockable9ParameterO","text":"Parameter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/Mockable\/documentation\/Mockable\/GenericValue","preciseIdentifier":"s:8Mockable12GenericValueV","text":"GenericValue"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to be encapsulated in a generic parameter."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A a type erased parameter containing the provided value."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/parameter\/generic(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/Parameter\/generic(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a type erased parameter from a value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"generic(_:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"generic"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parameter","preciseIdentifier":"s:8Mockable9ParameterO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GenericValue","preciseIdentifier":"s:8Mockable12GenericValueV"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:8Mockable9ParameterO7genericyACyAA12GenericValueVGqd__lFZ","extendedModule":"Mockable","modules":[{"name":"Mockable"}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable","doc:\/\/Mockable\/documentation\/Mockable\/Parameter"]]},"references":{"doc://Mockable/documentation/Mockable/Parameter/generic(_:)":{"role":"symbol","title":"generic(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"generic"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parameter","preciseIdentifier":"s:8Mockable9ParameterO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GenericValue","preciseIdentifier":"s:8Mockable12GenericValueV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a type erased parameter from a value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Parameter\/generic(_:)","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/parameter\/generic(_:)"},"doc://Mockable/documentation/Mockable/Parameter":{"role":"symbol","title":"Parameter","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"abstract":[{"type":"text","text":"An enumeration representing different types of parameters used in mocking."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Parameter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/mockable\/parameter"},"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/GenericValue":{"role":"symbol","title":"GenericValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericValue"}],"abstract":[{"type":"text","text":"A type erased wrapper for generic parameters."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/GenericValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericValue"}],"url":"\/documentation\/mockable\/genericvalue"}}}