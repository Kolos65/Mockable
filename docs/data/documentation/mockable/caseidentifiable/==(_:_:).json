{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The left-hand side "},{"type":"codeVoice","code":"CaseIdentifiable"},{"type":"text","text":"."}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The right-hand side "},{"type":"codeVoice","code":"CaseIdentifiable"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the instances have the same identifier; otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/caseidentifiable\/==(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/CaseIdentifiable\/==(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Compares two "},{"type":"codeVoice","code":"CaseIdentifiable"},{"type":"text","text":" instances for equality based on their unique identifiers."}],"kind":"symbol","metadata":{"role":"symbol","title":"==(_:_:)","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"op","externalID":"s:8Mockable16CaseIdentifiablePAAE2eeoiySbx_xtFZ","extendedModule":"Mockable","modules":[{"name":"Mockable"}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable","doc:\/\/Mockable\/documentation\/Mockable\/CaseIdentifiable"]]},"references":{"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/CaseIdentifiable":{"role":"symbol","title":"CaseIdentifiable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseIdentifiable"}],"abstract":[{"type":"text","text":"A protocol for enumerations that can be identified by a unique identifier."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/CaseIdentifiable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseIdentifiable"}],"url":"\/documentation\/mockable\/caseidentifiable"},"doc://Mockable/documentation/Mockable/CaseIdentifiable/==(_:_:)":{"role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Compares two "},{"type":"codeVoice","code":"CaseIdentifiable"},{"type":"text","text":" instances for equality based on their unique identifiers."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/CaseIdentifiable\/==(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/caseidentifiable\/==(_:_:)"}}}