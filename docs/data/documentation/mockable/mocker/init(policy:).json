{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"policy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV","text":"MockerPolicy"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/mocker\/init(policy:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/Mocker\/init(policy:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializes a new instance of "},{"type":"codeVoice","code":"Mocker"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"policy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"},{"kind":"text","text":"?)"}],"title":"init(policy:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:8Mockable6MockerC6policyACyxGAA0B6PolicyVSg_tcfc","modules":[{"name":"Mockable"}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable","doc:\/\/Mockable\/documentation\/Mockable\/Mocker"]]},"references":{"doc://Mockable/documentation/Mockable/Mocker":{"role":"symbol","title":"Mocker","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mocker"}],"abstract":[{"type":"text","text":"A class responsible for mocking and verifying interactions with a mockable service."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Mocker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mocker"}],"url":"\/documentation\/mockable\/mocker"},"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/MockerPolicy":{"role":"symbol","title":"MockerPolicy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MockerPolicy"}],"abstract":[{"type":"text","text":"A policy that controls how the library handles when no return value is found during mocking."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MockerPolicy"}],"url":"\/documentation\/mockable\/mockerpolicy"},"doc://Mockable/documentation/Mockable/Mocker/init(policy:)":{"role":"symbol","title":"init(policy:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"policy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MockerPolicy","preciseIdentifier":"s:8Mockable12MockerPolicyV"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Initializes a new instance of "},{"type":"codeVoice","code":"Mocker"},{"type":"text","text":"."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Mocker\/init(policy:)","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mocker\/init(policy:)"}}}