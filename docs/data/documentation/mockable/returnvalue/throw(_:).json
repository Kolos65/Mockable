{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/returnvalue\/throw(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/ReturnValue\/throw(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A case representing an error to be thrown."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"title":"ReturnValue.throw(_:)","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:8Mockable11ReturnValueO5throwyACs5Error_pcACmF","modules":[{"name":"Mockable"}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable","doc:\/\/Mockable\/documentation\/Mockable\/ReturnValue"]]},"references":{"doc://Mockable/documentation/Mockable/ReturnValue":{"role":"symbol","title":"ReturnValue","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReturnValue"}],"abstract":[{"type":"text","text":"An enumeration representing different types of return values for mocked functions."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/ReturnValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReturnValue"}],"url":"\/documentation\/mockable\/returnvalue"},"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/ReturnValue/throw(_:)":{"role":"symbol","title":"ReturnValue.throw(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A case representing an error to be thrown."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/ReturnValue\/throw(_:)","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/returnvalue\/throw(_:)"}}}