{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/mockerpolicy\/union(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/union(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"OptionSet.union(_:)"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"union(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","externalID":"s:s9OptionSetPsE5unionyxxF::SYNTHESIZED::s:8Mockable12MockerPolicyV","extendedModule":"Swift","modules":[{"name":"Mockable","relatedModules":["Swift"]}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/OptionSet-Implementations"]]},"references":{"doc://Mockable/documentation/Mockable/MockerPolicy/union(_:)":{"role":"symbol","title":"union(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/union(_:)","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/union(_:)"},"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/MockerPolicy/OptionSet-Implementations":{"role":"collectionGroup","title":"OptionSet Implementations","abstract":[],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/OptionSet-Implementations","kind":"article","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/optionset-implementations"},"doc://Mockable/documentation/Mockable/MockerPolicy":{"role":"symbol","title":"MockerPolicy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MockerPolicy"}],"abstract":[{"type":"text","text":"A policy that controls how the library handles when no return value is found during mocking."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MockerPolicy"}],"url":"\/documentation\/mockable\/mockerpolicy"}}}