{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/mockerpolicy\/isempty"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/isEmpty","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"SetAlgebra.isEmpty"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"isEmpty","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"property","externalID":"s:s10SetAlgebraPsE7isEmptySbvp::SYNTHESIZED::s:8Mockable12MockerPolicyV","extendedModule":"Swift","modules":[{"name":"Mockable","relatedModules":["Swift"]}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/SetAlgebra-Implementations"]]},"references":{"doc://Mockable/documentation/Mockable/MockerPolicy":{"role":"symbol","title":"MockerPolicy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MockerPolicy"}],"abstract":[{"type":"text","text":"A policy that controls how the library handles when no return value is found during mocking."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MockerPolicy"}],"url":"\/documentation\/mockable\/mockerpolicy"},"doc://Mockable/documentation/Mockable/MockerPolicy/isEmpty":{"role":"symbol","title":"isEmpty","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/isEmpty","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/isempty"},"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/MockerPolicy/SetAlgebra-Implementations":{"role":"collectionGroup","title":"SetAlgebra Implementations","abstract":[],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/SetAlgebra-Implementations","kind":"article","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/setalgebra-implementations"}}}