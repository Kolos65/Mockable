{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/mockerpolicy\/init(rawvalue:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/init(rawValue:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new option set from the given raw value."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"title":"init(rawValue:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:8Mockable12MockerPolicyV8rawValueACSi_tcfc","modules":[{"name":"Mockable"}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable","doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy"]]},"references":{"doc://Mockable/documentation/Mockable/MockerPolicy":{"role":"symbol","title":"MockerPolicy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MockerPolicy"}],"abstract":[{"type":"text","text":"A policy that controls how the library handles when no return value is found during mocking."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MockerPolicy"}],"url":"\/documentation\/mockable\/mockerpolicy"},"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/MockerPolicy/init(rawValue:)":{"role":"symbol","title":"init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new option set from the given raw value."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/MockerPolicy\/init(rawValue:)","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mockerpolicy\/init(rawvalue:)"}}}